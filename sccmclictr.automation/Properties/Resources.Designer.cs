//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace sccmclictr.automation.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("sccmclictr.automation.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $CacheElements =  get-wmiobject -query &quot;SELECT * FROM CacheInfoEx&quot; -namespace &quot;ROOT\ccm\SoftMgmtAgent&quot;
        ///$ElementGroup = $CacheElements | Group-Object ContentID
        ///[int]$Cleaned = 0;
        ///
        ///#Cleanup CacheItems where ContentFolder does not exist
        ///$CacheElements | where {!(Test-Path $_.Location)} | % { $_.Delete(); $Cleaned++ }
        ///$CacheElements = get-wmiobject -query &quot;SELECT * FROM CacheInfoEx&quot; -namespace &quot;ROOT\ccm\SoftMgmtAgent&quot;
        ///
        ///foreach ($ElementID in $ElementGroup) 
        ///{
        ///    if ($ElementID.Count -gt 1) 
        ///    {
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CacheCleanup {
            get {
                return ResourceManager.GetString("CacheCleanup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $MissingUpdates = $false;
        ///$FileRenamePending = $false;
        ///$CM12RebootPending = $false;
        ///$CM12HardRebootPending = $false;
        ///$PatchRebootPending = $false;
        ///$RebootRequired = $false;
        ///$RunningUpdates = $false;
        ///$UserLoggedOn = $false;
        ///$CCMUpdate = get-wmiobject -query &quot;SELECT * FROM CCM_SoftwareUpdate&quot; -namespace &quot;ROOT\ccm\ClientSDK&quot;;
        ///$CCMAppl = get-wmiobject -query &quot;SELECT * FROM CCM_Application&quot; -namespace &quot;ROOT\ccm\ClientSDK&quot;;
        ///$CCMProg = get-wmiobject -query &quot;SELECT * FROM CCM_Program&quot; -namespace &quot;ROOT\ccm [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string HealthCheck {
            get {
                return ResourceManager.GetString("HealthCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $script = 
        ///{
        ///function Enable-TSDuplicateToken {
        ///
        ///[CmdletBinding()]
        ///param()
        ///
        ///$signature = @&quot;
        ///    [StructLayout(LayoutKind.Sequential, Pack = 1)]
        ///     public struct TokPriv1Luid
        ///     {
        ///         public int Count;
        ///         public long Luid;
        ///         public int Attr;
        ///     }
        ///
        ///    public const int SE_PRIVILEGE_ENABLED = 0x00000002;
        ///    public const int TOKEN_QUERY = 0x00000008;
        ///    public const int TOKEN_ADJUST_PRIVILEGES = 0x00000020;
        ///    public const UInt32 STANDARD_RIGHTS_REQUIRED = 0x000F000 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SecretDecode {
            get {
                return ResourceManager.GetString("SecretDecode", resourceCulture);
            }
        }
    }
}
